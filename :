<script>
  let passwdLength = 16;
  let digitsLength = 0;
  let symbolsLength = 0;
  let requestDigit = false;
  let requestPunctuation = false;
  let inputText = '';
  let generetedPasswd = '--------';

  const generatePasswd = async () => {
    // IP address is Ubuntu on Parallels
    const endpoint = 'http://10.211.55.21:8000/gen_passwd/';
    const params = {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        passwd_length: passwdLength,
        request_digits: requestDigit,
        request_symbols: requestPunctuation,
        input_text: inputText.replace(/\s+/g, ''),
      }),
    };

    console.log(params);
    const response = await fetch(endpoint, params);
    const data = await response.json();
    console.log(data);
    generetedPasswd = data.Passwd;
  };

  export let name;
</script>

<main>
  <section>
    <h1>Hello {name}</h1>

    <table class="options">
      <tbody>
        <tr>
          <td class="left">
            <!-- svelte-ignore a11y-label-has-associated-control -->
            <label>Length</label>
          </td>
          <td class="center">
            <input type="range" bind:value={passwdLength} min="3" max="128" on:change={generatePasswd} />
          </td>
          <td class="right">{passwdLength}</td>
        </tr>
        <tr>
          <td class="left">
            <!-- svelte-ignore a11y-label-has-associated-control -->
            <label>Digits</label>
          </td>
          <td class="center">
            {#if inputText.length > 0}
              <input
                type="range"
                bind:value={digitsLength}
                min="0"
                max="20"
                on:change={generatePasswd}
                disabled="disabled"
              />
            {:else}
              <input type="range" bind:value={digitsLength} min="0" max="20" on:change={generatePasswd} />
            {/if}
          </td>
          <td class="right">{digitsLength}</td>
        </tr>
        <tr>
          <td class="left">
            <!-- svelte-ignore a11y-label-has-associated-control -->
            <label>Symbols</label>
          </td>
          <td class="center">
            {#if inputText.length > 0}
              <input
                type="range"
                bind:value={symbolsLength}
                min="0"
                max="20"
                on:change={generatePasswd}
                disabled="disabled"
              />
            {:else}
              <input type="range" bind:value={symbolsLength} min="0" max="20" on:change={generatePasswd} />
            {/if}
          </td>
          <td class="right">{symbolsLength}</td>
        </tr>
      </tbody>
    </table>

    <!-- svelte-ignore a11y-label-has-associated-control -->
    <label>
      <p>Today</p>
      {#if inputText.length > 0}
        <input type="checkbox" bind:checked={requestPunctuation} on:change={generatePasswd} />
      {:else}
        <input type="checkbox" bind:checked={requestPunctuation} on:change={generatePasswd} disabled="disabled" />
      {/if}
    </label>

    <label>
      <p>Text want to use for password</p>
      <textarea maxlength="128" bind:value={inputText} on:input={generatePasswd} />
    </label>
  </section>

  <section>
    <div>
      <p class="passwd-title">Generated Password</p>
      <p class="passwd">{generetedPasswd}</p>
    </div>
  </section>
</main>

<style>
  main {
    text-align: center;
    min-width: 360px;
    margin: 0 auto;
  }

  h1 {
    color: #ff3e00;
    text-transform: uppercase;
    font-size: 4rem;
    font-weight: 100;
    margin: 0.4rem;
  }

  .passwd-title {
    color: #ff3e00;
    text-transform: uppercase;
    font-size: 2em;
    font-weight: 100;
    background-color: #eee;
    padding: 0.5em;
  }

  .passwd {
    font-size: 1.2em;
    font-weight: 100;
    word-break: break-all;
  }

  .options {
    margin: auto;
  }

  .options .left {
    padding: 0.2rem;
    width: 5rem;
    text-align: right;
  }

  .options .center {
    padding: 0.5rem 1.2rem;
    width: 10rem;
  }

  .options .center input {
    margin-top: 0.3rem;
  }

  .options .right {
    padding: 0.2rem;
    width: 5rem;
    text-align: left;
  }
</style>
